<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
  >

  <channel>
    <title>Integralist</title>
    <atom:link href="http://integralist.co.uk/feed.xml" rel="self" type="application/rss+xml" />
    <link>http://integralist.co.uk</link>
    <description></description>
    <lastBuildDate>Mon, 30 Sep 2013 13:51:16 +0100</lastBuildDate>
    <language>en</language>
    <copyright>Integralist</copyright>

    
      <item>
        <title>Unix Commands</title>
        <link>http://integralist.co.uk/Unix-Commands.html</link>
        <pubDate>Tue, 01 Oct 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Unix-Commands.html</guid>
        <description>
        I've started to realise the beauty and efficiency that is the Unix Philosophy and so this post covers how to take advantage of a few common shell commands that you should find quite useful.
        </description>
      </item>
    
      <item>
        <title>Vim Workflow</title>
        <link>http://integralist.co.uk/VIM-Workflow.html</link>
        <pubDate>Sat, 21 Sep 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/VIM-Workflow.html</guid>
        <description>
        Since using Vim as my main editor, I've realised that just whimsically opening files and editing them wasn't going to work out in the long run so this is a short post on how I'm currently using Vim in my day to day work flow.
        </description>
      </item>
    
      <item>
        <title>A guide to getting started with Vim</title>
        <link>http://integralist.co.uk/VIM.html</link>
        <pubDate>Sun, 08 Sep 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/VIM.html</guid>
        <description>
        I explain how you can get started using Vim as your main editor and development environment, by focusing on installing some important plug-ins that are essential for a good Vim experience
        </description>
      </item>
    
      <item>
        <title>Imager.js (BBC News responsive images solution)</title>
        <link>http://integralist.co.uk/Imager.html</link>
        <pubDate>Wed, 14 Aug 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Imager.html</guid>
        <description>
        This is a duplication of a post I wrote for the BBC &quot;responsive news&quot; blog. It discusses the BBC News' open-source project Imager.js and how it helps with implementing a responsive images solution on a very large scale web application.
        </description>
      </item>
    
      <item>
        <title>Stark - Simplified separation of components into decoupled applications</title>
        <link>http://integralist.co.uk/Stark.html</link>
        <pubDate>Wed, 07 Aug 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Stark.html</guid>
        <description>
        Stark isn't a framework (or all-encompassing suite of tools). It is a 'strategy', a pattern for handling the architecture of your front-end code.
        </description>
      </item>
    
      <item>
        <title>Generate Application Cache Manifest with PhantomJS</title>
        <link>http://integralist.co.uk/Generate-Application-Cache-Manifest-with-PhantomJS.html</link>
        <pubDate>Sun, 04 Aug 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Generate-Application-Cache-Manifest-with-PhantomJS.html</guid>
        <description>
        Quick run down of using PhantomJS to generate an ApplicationCache manifest file (covers different aspects of Phantom's API)
        </description>
      </item>
    
      <item>
        <title>Using Grunts Config API</title>
        <link>http://integralist.co.uk/Using-Grunts-Config-API.html</link>
        <pubDate>Fri, 21 Jun 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Using-Grunts-Config-API.html</guid>
        <description>
        This is a continuation from my previous Grunt post where I was trying to dynamically update the main Grunt file at runtime. Seems there is a better (and more official) way to do this using aspects of the Grunt API
        </description>
      </item>
    
      <item>
        <title>Dynamically Generated Grunt Tasks</title>
        <link>http://integralist.co.uk/Dynamically-Generated-Grunt-Tasks.html</link>
        <pubDate>Mon, 17 Jun 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Dynamically-Generated-Grunt-Tasks.html</guid>
        <description>
        A slightly deeper dive into Grunt on how to generate sub tasks dynamically dependent on the contents of a particular folder structure
        </description>
      </item>
    
      <item>
        <title>The Clean Coder - How to be a Professional</title>
        <link>http://integralist.co.uk/The-Clean-Coder-How-To-Be-A-Professional.html</link>
        <pubDate>Sat, 01 Jun 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/The-Clean-Coder-How-To-Be-A-Professional.html</guid>
        <description>
        A quick review of Robert C. Martin's book &quot;The Clean Coder&quot; (which is a follow-up to his classic &quot;Clean Code&quot;). The subject isn't actually about code this time but about how to act and think like a professional. This is a fantastic read and would be very useful to both developers and managers alike.
        </description>
      </item>
    
      <item>
        <title>Grunt Boilerplate</title>
        <link>http://integralist.co.uk/Grunt-Boilerplate.html</link>
        <pubDate>Mon, 13 May 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Grunt-Boilerplate.html</guid>
        <description>
        Grunt is a JavaScript task runner. In this article I break down my &lt;a href=&quot;https://github.com/Integralist/Grunt-Boilerplate&quot; target=&quot;_blank&quot;&gt;Grunt Boilerplate&lt;/a&gt; which is a base project set-up using Grunt to take care of some standard tasks such as compiling AMD modules using RequireJS, watching/compiling Sass into CSS, watching and linting JS code as well as running unit tests.
        </description>
      </item>
    
  </channel>

</rss>