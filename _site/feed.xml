<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
  >

  <channel>
    <title>Integralist</title>
    <atom:link href="http://integralist.co.uk/feed.xml" rel="self" type="application/rss+xml" />
    <link>http://integralist.co.uk</link>
    <description></description>
    <lastBuildDate>Sun, 04 Aug 2013 21:01:48 +0100</lastBuildDate>
    <language>en</language>
    <copyright>Integralist</copyright>

    
      <item>
        <title>Generate Application Cache Manifest with PhantomJS</title>
        <link>http://integralist.co.uk/Generate-Application-Cache-Manifest-with-PhantomJS.html</link>
        <pubDate>Sun, 04 Aug 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Generate-Application-Cache-Manifest-with-PhantomJS.html</guid>
        <description>
        Quick run down of using PhantomJS to generate an ApplicationCache manifest file (covers different aspects of Phantom's API)
        </description>
      </item>
    
      <item>
        <title>Using Grunts Config API</title>
        <link>http://integralist.co.uk/Using-Grunts-Config-API.html</link>
        <pubDate>Fri, 21 Jun 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Using-Grunts-Config-API.html</guid>
        <description>
        This is a continuation from my previous Grunt post where I was trying to dynamically update the main Grunt file at runtime. Seems there is a better (and more official) way to do this using aspects of the Grunt API
        </description>
      </item>
    
      <item>
        <title>Dynamically Generated Grunt Tasks</title>
        <link>http://integralist.co.uk/Dynamically-Generated-Grunt-Tasks.html</link>
        <pubDate>Mon, 17 Jun 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Dynamically-Generated-Grunt-Tasks.html</guid>
        <description>
        A slightly deeper dive into Grunt on how to generate sub tasks dynamically dependent on the contents of a particular folder structure
        </description>
      </item>
    
      <item>
        <title>The Clean Coder - How to be a Professional</title>
        <link>http://integralist.co.uk/The-Clean-Coder-How-To-Be-A-Professional.html</link>
        <pubDate>Sat, 01 Jun 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/The-Clean-Coder-How-To-Be-A-Professional.html</guid>
        <description>
        A quick review of Robert C. Martin's book &quot;The Clean Coder&quot; (which is a follow-up to his classic &quot;Clean Code&quot;). The subject isn't actually about code this time but about how to act and think like a professional. This is a fantastic read and would be very useful to both developers and managers alike.
        </description>
      </item>
    
      <item>
        <title>Grunt Boilerplate</title>
        <link>http://integralist.co.uk/Grunt-Boilerplate.html</link>
        <pubDate>Mon, 13 May 2013 00:00:00 +0100</pubDate>
        <guid>http://integralist.co.uk/Grunt-Boilerplate.html</guid>
        <description>
        Grunt is a JavaScript task runner. In this article I break down my &lt;a href=&quot;https://github.com/Integralist/Grunt-Boilerplate&quot; target=&quot;_blank&quot;&gt;Grunt Boilerplate&lt;/a&gt; which is a base project set-up using Grunt to take care of some standard tasks such as compiling AMD modules using RequireJS, watching/compiling Sass into CSS, watching and linting JS code as well as running unit tests.
        </description>
      </item>
    
      <item>
        <title>Message passing in Object-Oriented Code</title>
        <link>http://integralist.co.uk/Message-Passing-In-Object-Oriented-Code.html</link>
        <pubDate>Sun, 31 Mar 2013 00:00:00 +0000</pubDate>
        <guid>http://integralist.co.uk/Message-Passing-In-Object-Oriented-Code.html</guid>
        <description>
        Thoughts about passing messages between objects in true object-oriented design.
        </description>
      </item>
    
      <item>
        <title>Object-Oriented Design (OOD)</title>
        <link>http://integralist.co.uk/Object-Oriented-Design.html</link>
        <pubDate>Tue, 12 Feb 2013 00:00:00 +0000</pubDate>
        <guid>http://integralist.co.uk/Object-Oriented-Design.html</guid>
        <description>
        After reading through Sandi Metz' book Practical Object-Oriented Design in Ruby I wanted to make sure I put down in a blog post (a distilled) break-down of all the great advice she provides (note that this post is mainly for my own reference/reminder, I strongly recommend you read the book as there is so much more you'll gain from reading the book compared to this post)
        </description>
      </item>
    
      <item>
        <title>Git Tips</title>
        <link>http://integralist.co.uk/G-Tips-%28Git-Tips%29.html</link>
        <pubDate>Sun, 16 Dec 2012 00:00:00 +0000</pubDate>
        <guid>http://integralist.co.uk/G-Tips-%28Git-Tips%29.html</guid>
        <description>
        I've been meaning to take my long list of fragmented notes on Git commands and put them altogether into a single blog post. Hopefully they'll be of use to others confused about Git.
        </description>
      </item>
    
      <item>
        <title>Maintainable CSS with BEM</title>
        <link>http://integralist.co.uk/Maintainable-CSS-with-BEM.html</link>
        <pubDate>Sun, 09 Dec 2012 00:00:00 +0000</pubDate>
        <guid>http://integralist.co.uk/Maintainable-CSS-with-BEM.html</guid>
        <description>
        A look at how to utilise the BEM (Block, Element, Modifier) methodology for writing simple but structured and maintainable CSS.
        </description>
      </item>
    
      <item>
        <title>Backbone Validation</title>
        <link>http://integralist.co.uk/Backbone-Validation.html</link>
        <pubDate>Mon, 26 Nov 2012 00:00:00 +0000</pubDate>
        <guid>http://integralist.co.uk/Backbone-Validation.html</guid>
        <description>
        I demonstrate how to create a Backbone.View to help ease the validation of a form and the displaying of custom error messages.
        </description>
      </item>
    
  </channel>

</rss>